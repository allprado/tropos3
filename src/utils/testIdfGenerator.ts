import { generateIdf } from '../services/idfGenerator';

export const testIdfGenerator = () => {
  const testDimensions = {
    width: 6.0,
    length: 4.0,
    height: 3.0
  };

  const testMaterials = {
    wall: 'brick' as const,
    window: 'double_clear' as const,
    surface: 'concrete' as const
  };

  const testNorthAngle = 0;

  console.log('üß™ === TESTE DO GERADOR IDF PARA ENERGYPLUS 8.9 ===');
  console.log('üìê Dimens√µes:', testDimensions);
  console.log('üß± Materiais:', testMaterials);
  console.log('üß≠ √Çngulo Norte:', testNorthAngle, 'radianos');

  try {
    const idfContent = generateIdf(testDimensions, testNorthAngle, testMaterials);
    
    console.log('‚úÖ IDF gerado com sucesso!');
    
    // Verifica√ß√µes espec√≠ficas dos problemas reportados
    const versionCheck = idfContent.match(/Version,\s*([^;]+);/);
    const windowNorthCheck = idfContent.includes('Window North,');
    const numbersInWindowNorth = idfContent.match(/Window North[\s\S]*?4,\s*!- Number of Vertices([\s\S]*?);/);
    
    console.log('\nüîç AN√ÅLISE DETALHADA:');
    console.log('üìã Vers√£o encontrada:', versionCheck ? versionCheck[1].trim() : 'N√ÉO ENCONTRADA');
    console.log('ü™ü Janela Norte definida:', windowNorthCheck);
    
    if (numbersInWindowNorth) {
      console.log('üìä Coordenadas da Janela Norte:');
      const coords = numbersInWindowNorth[1];
      console.log(coords);
    }

    // Procurar por problemas conhecidos
    const problems = [];
    if (idfContent.includes('9.5')) problems.push('‚ùå Vers√£o 9.5 encontrada');
    if (idfContent.includes('-0.750000')) problems.push('‚ùå Coordenada -0.750000 problem√°tica encontrada');
    if (idfContent.includes('Ideal Loads')) problems.push('‚ùå Refer√™ncia a Ideal Loads encontrada');
    
    if (problems.length > 0) {
      console.log('\nÔøΩ PROBLEMAS DETECTADOS:');
      problems.forEach(p => console.log(p));
    } else {
      console.log('\n‚úÖ Nenhum problema conhecido detectado!');
    }

    // Mostrar primeiras 100 linhas para debug
    console.log('\nüìÑ PRIMEIRAS LINHAS DO IDF:');
    console.log('='.repeat(80));
    const lines = idfContent.split('\n').slice(0, 50);
    lines.forEach((line, i) => console.log(`${(i+1).toString().padStart(2, '0')}: ${line}`));
    console.log('='.repeat(80));
    
    return idfContent;
    
  } catch (error) {
    console.error('‚ùå Erro ao gerar IDF:', error);
    return null;
  }
};
